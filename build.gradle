plugins {
    id 'fabric-loom' version '0.5-SNAPSHOT'
    id "com.github.fudge.forgedflowerloom" version "2.0.0"
}

repositories {
    maven { url = "https://jitpack.io" }
    maven { url = "https://www.cursemaven.com" }
    maven { url = "https://maven.theillusivec4.top/" }
    maven { url = "https://dl.bintray.com/ladysnake/libs" }
    maven { url = 'https://maven.dblsaiko.net' }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

sourceSets {
    testmod {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }
}


dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Dependencies
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "top.theillusivec4.curios:curios-fabric:${project.curios_version}"
    modImplementation("me.shedaniel.cloth:config-2:${project.cloth_config_version}") {
        exclude(group: "io.github.prospector", module: "modmenu")
    }
    include "me.shedaniel.cloth:config-2:${project.cloth_config_version}"
    modImplementation "me.sargunvohra.mcmods:autoconfig1u:${project.auto_config_version}"
    include "me.sargunvohra.mcmods:autoconfig1u:${project.auto_config_version}"
    modImplementation("io.github.prospector:modmenu:${project.mod_menu_version}") {
        transitive = false
    }

    // Dev runtime
    testmodImplementation sourceSets.main.output
    modRuntime "net.dblsaiko:winwonders:${project.window_wonders_version}-+"
    modRuntime("com.github.SuperCoder7979:databreaker:${databreaker_version}") {
        exclude module: "fabric-loader"
    }
    modRuntime "curse.maven:sodium:${sodium_version}"
    modRuntime "curse.maven:lithium:${lithium_version}"
    modRuntime "curse.maven:phosphor:${phosphor_version}"
    modRuntime "curse.maven:iamverysmart:${iamverysmart_version}"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}
